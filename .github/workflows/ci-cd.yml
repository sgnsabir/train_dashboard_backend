name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      kafka:
        image: confluentinc/cp-kafka:7.3.1
        ports:
          - 9092:9092
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Maven
        run: mvn clean install -B

      - name: Run Unit and Integration Tests
        run: mvn test

      - name: Build Docker Image
        run: mvn spring-boot:build-image -Dspring-boot.build-image.imageName=myapp:latest

      # (Optional) Deploy to staging environment if tests pass.
      # - name: Deploy to Staging
      #   run: echo "Deploying to staging environment..."
      #   # Insert your deployment scripts/commands here.

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: 'http://localhost:8080'
          rulesFileName: 'zap-baseline-rules.xml'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
