services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"      # Internal container network uses port 9092
      - "29092:29092"    # Expose port 29092 to your localhost
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Two listeners:
      #   - PLAINTEXT for internal Docker network (mapped to 9092 in the container)
      #   - HOST for external host usage (mapped to 29092)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always

  zipkin:
    image: openzipkin/zipkin:2.23.0
    container_name: zipkin
    ports:
      - "9411:9411"
    restart: always

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: predictive-maintenance-backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - DB_NAME=banenor_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=0000
      - JWT_SECRET=ahZLfXRYnJ+rl6zrd07Csxyc7EslWqNOZa+Zl/HK3M5mOXDLuoPAczd/Y+VZgTlcfpPSjEnZwVbje9NLhIUFzg==
      - SPRING_REDIS_HOST=redis
      - SPRING_MAIL_HOST=mailhog
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
    volumes:
      - integration-test-results:/target/report
    depends_on:
      - kafka
      - redis
      - mailhog
      - zipkin
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  integration-test-results:

networks:
  default:
    name: banenor-net
